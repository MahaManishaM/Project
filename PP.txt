
Form Validation
import React, { useState } from "react";

function App() {
  const [name, setName] = useState("");
  const [error, setError] = useState("");

  const handleSubmit = (e) => {
    e.preventDefault();
    if (name.trim() === "") {
      setError("Name is required!");
    } else {
      setError("");
      alert("Form submitted successfully!");
    }
  };

  return (
    <div style={{ padding: "30px" }}>
      <h2>Simple Form Validation</h2>
      <form onSubmit={handleSubmit}>
        <input
          type="text"
          placeholder="Enter your name"
          value={name}
          onChange={(e) => setName(e.target.value)}
        />
        <button type="submit">Submit</button>
      </form>
      {error && <p style={{ color: "red" }}>{error}</p>}
    </div>
  );
}

export default App;


BMI Calculator
import React, { useState } from "react";

function App() {
  const [weight, setWeight] = useState("");
  const [height, setHeight] = useState("");
  const [bmi, setBmi] = useState(null);

  const calculateBMI = () => {
    if (weight && height) {
      const result = (weight / (height * height)).toFixed(2);
      setBmi(result);
    }
  };

  return (
    <div style={{ padding: "30px" }}>
      <h2>BMI Calculator</h2>
      <input
        type="number"
        placeholder="Weight (kg)"
        value={weight}
        onChange={(e) => setWeight(e.target.value)}
      />
      <input
        type="number"
        placeholder="Height (m)"
        value={height}
        onChange={(e) => setHeight(e.target.value)}
      />
      <button onClick={calculateBMI}>Calculate</button>
      {bmi && <p>Your BMI is: {bmi}</p>}
    </div>
  );
}

export default App;

Currency Converter
import React, { useState } from "react";

function App() {
  const [usd, setUsd] = useState("");
  const [inr, setInr] = useState("");

  const convertToINR = () => {
    const rate = 83; // 1 USD = 83 INR (example)
    setInr((usd * rate).toFixed(2));
  };

  return (
    <div style={{ padding: "30px" }}>
      <h2>Currency Converter (USD â†’ INR)</h2>
      <input
        type="number"
        placeholder="Enter USD"
        value={usd}
        onChange={(e) => setUsd(e.target.value)}
      />
      <button onClick={convertToINR}>Convert</button>
      {inr && <p>{usd} USD = {inr} INR</p>}
    </div>
  );
}

export default App;

Simple CRUD
import React, { useState } from "react";

function App() {
  const [item, setItem] = useState("");
  const [list, setList] = useState([]);

  const addItem = () => {
    if (item.trim() !== "") {
      setList([...list, item]);
      setItem("");
    }
  };

  const deleteItem = (index) => {
    setList(list.filter((_, i) => i !== index));
  };

  return (
    <div style={{ padding: "30px" }}>
      <h2>Simple CRUD App</h2>
      <input
        type="text"
        placeholder="Enter item"
        value={item}
        onChange={(e) => setItem(e.target.value)}
      />
      <button onClick={addItem}>Add</button>
      <ul>
        {list.map((val, i) => (
          <li key={i}>
            {val} <button onClick={() => deleteItem(i)}>Delete</button>
          </li>
        ))}
      </ul>
    </div>
  );
}

export default App;


Fetching API Data

import React, { useEffect, useState } from "react";

function App() {
  const [users, setUsers] = useState([]);

  useEffect(() => {
    fetch("https://jsonplaceholder.typicode.com/users")
      .then((res) => res.json())
      .then((data) => setUsers(data));
  }, []);

  return (
    <div style={{ padding: "30px" }}>
      <h2>Fetch API Example</h2>
      {users.map((user) => (
        <p key={user.id}>{user.name}</p>
      ))}
    </div>
  );
}

export default App;

